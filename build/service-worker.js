"use strict";var precacheConfig=[["/index.html","200239cd851c60a84bc420895ca4ec1a"],["/static/css/main.0fdf3dbf.css","2188133177f9d2c70b19b3e6ea486c4a"],["/static/js/main.cf17ac01.js","9112a5940836265e109708c70428e204"],["/static/media/Crypton1.cff7305b.png","cff7305b3183b3b3ce83014e5d9e707c"],["/static/media/Crypton2.419571e5.png","419571e5b02485027886316e98d7aa15"],["/static/media/Crypton3.41a946d1.png","41a946d1c23dcb70fa1717b86040aeb3"],["/static/media/Crypton4.20e980aa.png","20e980aafc8489e3d28125ff3c8b3be2"],["/static/media/Crypton5.15c99e47.png","15c99e472c5dee5f6ba651eb0f1cee4c"],["/static/media/Crypton6.f0b74cb2.png","f0b74cb233c9893b06731bf97f9a3244"],["/static/media/Crypton7.766750f3.png","766750f32e3a540ae47e6f8bcc9b1324"],["/static/media/Crypton8.7c1c1849.png","7c1c184902da8e3f0b3254fa8b09539e"],["/static/media/CryptonLogo.b509530a.jpg","b509530a251e682916c2143fe4a9eb14"],["/static/media/Facebook.a104d53b.png","a104d53b741ad9f1074b3aff6066f291"],["/static/media/Forest.1cf62fe2.jpg","1cf62fe2be7f5d928e1634be41f69939"],["/static/media/GitHub.bb37c266.png","bb37c266fa5be7e4481b8fff070d7da3"],["/static/media/Logo.c120451f.png","c120451f2822443a7cf303bb2db98767"],["/static/media/characterSelect.fee876c7.png","fee876c749a7c9982c1bff5c87e2a897"],["/static/media/createCharacter.fa5f6cc4.png","fa5f6cc4f2f91b7cb34944a711cee5e4"],["/static/media/fireballFight.466f5740.png","466f574028b6b60d2cdcaadf4a71a97f"],["/static/media/game.7f936654.png","7f936654e2886e375785f11005c3b053"],["/static/media/shadowBallFight.d833f6de.png","d833f6de726fa91b7aeb1205f1f7b404"],["/static/media/titleScreen.1cc0cac7.png","1cc0cac7a3a6b514fd686767e3e31785"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});